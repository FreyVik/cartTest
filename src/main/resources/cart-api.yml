openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:4000/cart
    description: Generated server url
tags:
  - cart
paths:
  /addProduct:
    post:
      tags:
        - "cart"
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestValidationErrorDTO'
  /{id}:
    get:
      tags:
        - "cart"
      operationId: getCart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDTO'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestValidationErrorDTO'
  /delete:
    delete:
      tags:
        - "cart"
      operationId: deleteCart
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RequestValidationErrorDTO'
components:
  schemas:
    RequestValidationErrorDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        fieldErrors:
          type: object
          additionalProperties:
            type: string
    ProductDTO:
      required:
        - amount
        - description
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        amount:
          type: number
          format: double
    ProductListDTO:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDTO'
    CartDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDTO'
        totalProducts:
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double